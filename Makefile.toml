# see https://crates.io/crates/cargo-make

[env]
RUST_TEST_THREADS = "1"
CARGO_MAKE_TEST_COVERAGE_BINARY_FILTER = "cli-[a-z0-9]*$\\|makers-[a-z0-9]*$\\|${CARGO_MAKE_TEST_COVERAGE_DEFAULT_BINARY_FILTER}"


[tasks.build-verbose]
# override
#args = ["build", "--verbose", "--all-features"]
args = ["build", "--all-features"]
#args = ["build", "--release", "--all-features"]

[tasks.test-verbose]
# override
#args = ["test", "--verbose", "--all-features"]
args = ["test"]
#args = ["test", "--release"]

[tasks.zip-release-ci-flow]
description = "Compiles the binary in release mode and zips it up"
category = "CI"
condition = { env_set = ["TARGET", "TAG"] }
dependencies = [
  # "clean",
  "build-release-for-target",
  "zip-release-binary-for-target"
]

[tasks.build-release-for-target]
description = "Makes a release build for a given target"
condition = { env_set = [ "TARGET" ] }
command = "cargo"
args = [
  "build",
  "--release",
  "--all-features",
  "--target",
  "${TARGET}"
]

[tasks.zip-release-binary-for-target]
description = "Zips up the release binary, README, and license(s)"
category = "Publish"
condition = { env_set = [ "TARGET" ] }
# env = { "LIBZ_SYS_STATIC" = "1", "PKG_CONFIG_ALLOW_CROSS" = "1" }
env = {OUTPUT_NAME = "${CARGO_MAKE_CRATE_NAME}_${CARGO_MAKE_CRATE_VERSION}-${TARGET}", RELEASE_PATH="target/dist/${OUTPUT_NAME}"}
script_runner = "@shell"
script = [
  "rm -Rf ${RELEASE_PATH}*",
  "mkdir -p ${RELEASE_PATH}",
  "cp target/TARGET/release/${CARGO_MAKE_CRATE_NAME} ${RELEASE_PATH}/",
  "strip ${RELEASE_PATH}/${CARGO_MAKE_CRATE_NAME}",
  # "cp README.md LICENSE* ${OUTPUT_NAME}/",
  # "zip -r ${OUTPUT_NAME}.zip ${OUTPUT_NAME}",
  "tar -czvf ${RELEASE_PATH}.tar.gz -C ${RELEASE_PATH} ."
]

[tasks.zip-release-binary-for-target.windows]
env = { RELEASE_PATH="target\dist\${OUTPUT_NAME}"}
script_runner = "@shell"
script = [
  "setlocal enableextensions",
  "rm -Rf ${RELEASE_PATH}*",
  "md ${RELEASE_PATH}",
  "powershell copy-item -path target\${TARGET}\release\${CARGO_MAKE_CRATE_NAME}.exe -destination ${RELEASE_PATH}",
  # "powershell copy-item -path README.md -destination ${OUTPUT_NAME}",
  # "powershell copy-item -path LICENSE -destination ${OUTPUT_NAME}",
  #"dir ${OUTPUT_NAME}",
  "powershell Compress-Archive -Path ${RELEASE_PATH}\* -DestinationPath ${RELEASE_PATH}.zip -CompressionLevel Optimal",
]

[tasks.update-changelog]
category="Publish"
install_crate = {crate_name="gitmoji-changelog", binary = "gitmoji-changelog", test_arg = "--help"}
command = "gitmoji-changelog"
args =["-r", "${CARGO_MAKE_CRATE_VERSION}", "-o", "CHANGELOG.md", "."]