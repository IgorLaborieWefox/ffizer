language: rust
cache: false
  # timeout on windows
  # cargo: true
  # timeout: 2000
  #directories:
    # - $HOME/.cargo
    # - $TRAVIS_BUILD_DIR/target
    # - $TRAVIS_BUILD_DIR/target/debug/deps
    # - $TRAVIS_BUILD_DIR/target/release/deps

rust:
  - stable
matrix:
  include:
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    # - os: linux
    #   rust: stable
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: stable
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: stable
    #   env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: windows
      rust: stable
      env: TARGET=x86_64-pc-windows-msvc
  # allow_failures:
  #   - rust: nightly
  fast_finish: true

addons:
  apt:
    packages:
      # needed for i686-unknown-linux-gnu target
      - gcc-multilib
      # needed to build deb packages
      - fakeroot

env:
  global:
    # Used on the deployment script
    - PROJECT_NAME=ffizer
    - LIBZ_SYS_STATIC=1
    - PKG_CONFIG_ALLOW_CROSS=1

install:
  # prevent target re-add error from rustup
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$TARGET" != "x86_64-unknown-linux-gnu" ]]; then rustup target add $TARGET; fi
#   - rustup component add rustfmt-preview

# before_script: |
#   - export PATH=$HOME/.cargo/bin:$PATH
#   - cargo install cargo-update || echo "cargo-update already installed"
#   - cargo install cargo-outdated || echo "cargo-outdated already installed"
#   - cargo install cargo-travis || echo "cargo-travis already installed"
#   - cargo install cargo-lichking || echo "cargo-lichking already installed"
#   - cargo update # update outdated cached binaries
#   - cargo fmt -- --write-mode=diff
#   - cargo outdated --root-deps-only --exit-code 1

script:
  # Incorporate TARGET env var to the build and test process
  #- cargo test --target $TARGET --cfg test_remote
  - travis_wait 30 cargo build --target $TARGET --release
  - travis_wait 30 cargo test --target $TARGET --release
  # failed on os == windows
  # - cargo publish --dry-run

before_deploy:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then cd target/${TARGET}/release ; strip ${PROJECT_NAME}; tar -czvf  "../../../${PROJECT_NAME}_${TRAVIS_TAG}-${TARGET}.tar.gz" ${PROJECT_NAME} ; cd - ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cd target/${TARGET}/release ; 7z a ../../../"${PROJECT_NAME}_${TRAVIS_TAG}-${TARGET}.zip" ${PROJECT_NAME}.exe ; cd - ; fi
  # releases not packaged into archive
  # - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then strip target/${TARGET}/release/${PROJECT_NAME} -o "${PROJECT_NAME}_${TRAVIS_TAG}-${TARGET}"; fi
  # - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cp target/${TARGET}/release/${PROJECT_NAME}.exe "${PROJECT_NAME}_${TRAVIS_TAG}-${TARGET}.exe"; fi

deploy:
  # generate with "travis setup releases --force --pro"
  provider: releases
  api_key:
    secure: ZhTCIMv/kYN+DwhMsYB0TJmshjfNSKIzmBzlL/ytI6NXAA4lfhou31StE3ue6v5E9bWWymbC/SbdjbQREcEQAa/W9GMDr7kJ/2iaZrn8RD6awZx/urVCpSDUWy3OMaHWeTEQ43gPG85XsSf5TZZOoWyVhJ2KSFbFWbLF68ZutQP/JkcZJuzOGtMv5nyuI1APZw0jYzPue3HtV7QwZRGptX+XuZqY0R/7MmVICU40fWR7MXREhuEQOXt1T8taX0vw+CAt3/mlx8iMjY5pOgy23QjANNntNNbmgx2X176kcPvHfAJzun47SorK1FZ59fP/0+s9O/14Q6m+LanNd5l2xsNXBLNGjQOPg22AelxftJyEF9+vdUOcimM/l/iTiE9SJYRHtFQaZysOOMFGNmxCTDAobB3uq+MUo9xH5CFrbfKGM0Px7UPzYuWMmm8MC3/guNOd+EfHEYrLL69Lq5tNAqcXkFZxNGSLFPa9LQfLK6dJSFOjhNIwbifIWfG9dKYXKCDcizWXUqBH7azFHkp2oIsMWN9M5XXCcYYj5qDfPsuqR/fKOMMEKX8Y2b2jZEom8B0Mgwd4rCoJ5R+m1GxBccVsAQgh3/X3K8Zc29eEJuT3iWvUOKnqK2rqZidLGPR0QXMiw/c+kDjpUHIw8jzFvFYiivvTIFDhgZbpes9asMg=
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - ${PROJECT_NAME}_${TRAVIS_TAG}-${TARGET}.*
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    rust: stable
    tags: true
    repo: davidB/ffizer
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
